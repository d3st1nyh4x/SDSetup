<!-- Copyright (c) 2018 noahc3
   - This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
@page "/credits"
<h1 style="text-align:center">Credits</h1>
<h3>Package Credits</h3>
@if (G.initialized && localInit) {
<div class="ui styled fluid accordion" style="margin-top:1.5em">

	@foreach (Platform plat in G.manifest.Platforms.Values) {
        if (!plat.Visible) { continue; }
		<div class="title @(opened[plat.ID] == true ? "active" : "")" @onclick="@(() => opened[plat.ID] = !opened[plat.ID])">
			<i class="dropdown icon"></i>
			@plat.Name
		</div>
		<div class="content @(opened[plat.ID] == true ? "active" : "")">
			<BlazorTable IsResponsive="true" IsSmall="true" IsStriped="true" IsBordered="true">
				<thead>
					<tr>
						<th scope="col">Package Name</th>
						<th scope="col">Authors</th>
						<th scope="col">Version</th>
						<th scope="col">Source</th>
					</tr>
				</thead>
				<tbody>
					@foreach (Package p in G.packages[plat.ID].Values) {
						if (String.IsNullOrEmpty(p.Authors) || !p.Visible) { continue; }
						<tr>
							<th scope="row">@p.Name</th>
							<td>@p.Authors</td>
							<td>@p.Versions[G.channel]</td>
							<td>@if (@p.Source.Contains("https://") || p.Source.Contains("http://")) {<a href="@p.Source">@p.Source</a>} else {@p.Source}</td>
						</tr>
					}
						<tr>
							<th scope="row">SDSetup</th>
							<td>Noahc3</td>
							<td>Some Version</td>
							<td><a href="https://github.com/noahc3/SDSetup">https://github.com/noahc3/SDSetup</a></td>
						</tr>

				</tbody>
			</BlazorTable>
		</div>
	}
</div>
	} else {
	<h4>Loading, please wait...</h4>
	}

	<h3>Credits</h3>

	<ul class="ui list">
        <li>The AtlasNX team.</li>
		<li>Steve Sanderson and contributors for making this almost amazing thing called <a href="https://blazor.net/">Blazor</a></li>
		<li>Rikumax25 / Jorgev259 for JSZip wrapper functions used in <a href="https://github.com/jorgev259/3SDSetup">3SDSetup</a>/<a href="https://github.com/jorgev259/wiiusetup">WiiuSetup</a>, ultimately making my life much easier</li>
		<li>Chanan Braunstein for <a href="https://github.com/chanan/BlazorStrap">BlazorStrap</a></li>
		<li>Joonas W. for <a href="https://joonasw.net/view/csharp-await-and-js-promises-in-blazor">Using C# await against JS Promises in Blazor</a></li>
        <li>friedkeenan for a very awesome shrekbrew menu and lots of feed back.</li>
        <li>the madlads down at #kekmon, shout out to isaac!</li>
        <li>noah for helping me set up and making sdsetup in the first place, this wouldn't have happened without you!</li>
	</ul>

@functions {
	Dictionary<string, bool> opened = new Dictionary<string, bool>();
	public static Action ForceUiUpdate;
	private bool localInit = false;

	protected override async Task OnInitAsync() {
		foreach (Platform plat in G.manifest.Platforms.Values) opened[plat.ID] = false;
		ForceUiUpdate = new Action(() => StateHasChanged());
		localInit = true;
	}
}
